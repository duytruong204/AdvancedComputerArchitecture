`timescale 1ns/1ps

module singlecycle_tb(a);

	reg i_clk;
	reg i_reset;
	integer i;
	output a;

	// Instantiate DUT
	singlecycle dut (
		.i_clk(i_clk),
		.i_reset(i_reset)
	);
	initial begin
		i_clk = 0;
		i_reset = 1;
	end
	// Clock generation
	always #5 i_clk = ~i_clk;

	// Reset logic
	initial begin
		#5;
		i_reset = 0;
		#20;
		i_reset = 1;
	end
	
	initial begin
		// Let the CPU run for some time (e.g. 1000 ns)
		#300;
		$finish;
		
	end
	always @ (posedge i_clk) begin
		// Display register contents
		$display("Register File Dump: ");
		$display("Inst = %8h, func3 = %3b,i_alu_op = %4b, imm = %0d", dut.u3.o_rdata , dut.u0.alu_sel_unit.funct3,dut.u7.i_alu_op, dut.u5.imm);
		for (i = 0; i < 32; i = i + 1) begin
			$display("x%0d = %8h", i, dut.u4.u2.registers[i]);
		end
	end
	
endmodule
